#The technical name of the REST API extension
#Must be URL compliant (alpha-numeric characters with no whitespace) and be prefixed by "custompage_"
name=custompage_UsersOfActorRestAPI

#Name displayed in the Portal
displayName=UsersOfActor REST API

#Description displayed in the Portal
description=API REST para administrar resourceName

#Must be apiExtension for a REST API extension
contentType=apiExtension

#Declare at least one API extension here (comma-separated list)
apiExtensions=UsersOfActorRestAPI

#For each declared API extension,  specify the
#following properties: method,pathTemplate,classFileName and permissions

#Specify one HTTP verb from GET|POST|PUT|PATCH|DELETE|HEAD|OPTIONS|TRACE
#GET is the recommended value for a REST API extension.
#Write operations should be performed by a process.
UsersOfActorRestAPI.method=GET

#Define the URL path template
#Resulting URL: ../API/extension/usersOfActor
UsersOfActorRestAPI.pathTemplate=usersOfActor

#Declare the associated RestAPIController Groovy file
UsersOfActorRestAPI.classFileName=com/ca/rest/api/Index.groovy

#Declare the permissions list (comma-separated list)
#For each permission declared, you must map it either to a profile (for example User, Administrator, or a custom profile) or to a specific user.
#Edit the custom-permissions-mapping.properties configuration file.
#For example: user|john=[usersOfActor] or profile|User=[usersOfActor]
#In production, use the platform-setup tool.
#In the studio, go to menu Development > REST API Extension > Edit permissions mapping.
UsersOfActorRestAPI.permissions=usersOfActor
